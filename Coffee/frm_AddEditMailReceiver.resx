<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>